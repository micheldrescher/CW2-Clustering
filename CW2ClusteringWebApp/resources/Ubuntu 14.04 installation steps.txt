****************
** PostgreSQL **
****************
# apt-get update
# apt-get install postgresql


*****************
** Oracle Java **
*****************
# sudo apt-get install software-properties-common
# sudo apt-add-repository ppa:webupd8team/java
# sudo apt-get update
# sudo apt-get install oracle-java8-installer


*********************
** Apache Tomcat 8 **
*********************
# groupadd tomcat
# useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat

** find latest binary at Tomcat download page:
** http://tomcat.apache.org/download-80.cgi

# cd
# wget http://mirror.ox.ac.uk/sites/rsync.apache.org/tomcat/tomcat-8/v8.0.32/bin/apache-tomcat-8.0.32.tar.gz
# mkdir /opt/tomcat
# tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1
$ cd /opt/tomcat
# chgrp -R tomcat conf
# chmod g+rwx conf
# chmod g+r conf/*
# chown -R tomcat work/ temp/ logs/


***************************
** Tomcat upstart script **
***************************
# update-alternatives --config java

** take path except bin/java/!
# nano /etc/init/tomcat.conf

** paste the script into the edited file, modifying the JAVA_HOME variable:
---------- SNIP ---------- SNIP ---------- SNIP ---------- SNIP ----------
description "Tomcat Server"

  start on runlevel [2345]
  stop on runlevel [!2345]
  respawn
  respawn limit 10 5

  setuid tomcat
  setgid tomcat

  env JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64/jre
  env CATALINA_HOME=/opt/tomcat

  # Modify these options as needed
  env JAVA_OPTS="-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom"
  env CATALINA_OPTS="-Xms512M -Xmx1024M -server -XX:+UseParallelGC"

  exec $CATALINA_HOME/bin/catalina.sh run

  # cleanup temp directory after stop
  post-stop script
    rm -rf $CATALINA_HOME/temp/*
  end script
---------- SNIP ---------- SNIP ---------- SNIP ---------- SNIP ----------
  
# initctl reload-configuration

******************
** Tomcat users **
******************
# vim /opt/tomcat/conf/tomcat-users.xml

** add the following snippet and adjust username and password
---------- SNIP ---------- SNIP ---------- SNIP ---------- SNIP ----------
<role rolename="manager-gui"/>
<user username="admin" password="password" roles="manager-gui,admin-gui"/>
---------- SNIP ---------- SNIP ---------- SNIP ---------- SNIP ----------

********************************
** Configuring Tomcat for TLS **
********************************
# cd /opt/tomcat/conf

**
** Self signed certificate option
**
# keytool -keystore /opt/tomcat/conf/keystore -genkeypair -alias tomcat -keyalg RSA -keysize 4096
# chgrp tomcat keystore
# chmod o-r keystore

**
** Actial certificate option
**
** Create certificate using browser
** Export in PKCS#12
** transfer to server
** 
# vim /opt/tomcat/conf/server.xml

** disable AJP connector, as this is a standalone configuration!
** make sure that the relevant section is commented out:
---------- SNIP ---------- SNIP ---------- SNIP ---------- SNIP ----------
    <!-- Define an AJP 1.3 Connector on port 8009 -->
    <!-- <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" /> -->
---------- SNIP ---------- SNIP ---------- SNIP ---------- SNIP ----------

** enable TLS connector
** make sure it uses Nio2!
---------- SNIP ---------- SNIP ---------- SNIP ---------- SNIP ----------
    <!-- Define a SSL/TLS HTTP/1.1 Connector on port 8443
         This connector uses the NIO implementation that requires the JSSE
         style configuration. When using the APR/native implementation, the
         OpenSSL style configuration is required as described in the APR/native
         documentation -->
    <Connector port="8443" protocol="org.apache.coyote.http11.Http11Nio2Protocol"
               maxThreads="150" SSLEnabled="true" scheme="https" secure="true"
               clientAuth="false" sslProtocol="TLS" 
                keyAlias="tomcat" keyPass="T00M4nyP4$$w0rd$!" keystoreFile="/opt/tomcat/conf/keystore" />
---------- SNIP ---------- SNIP ---------- SNIP ---------- SNIP ----------

** redirect all HTTP traffic to HTTPS
# vim /opt/tomcat/conf/web.xml
---------- SNIP ---------- SNIP ---------- SNIP ---------- SNIP ----------
<!-- Add this snippet as LAST elements to web.xml! -->
<security-constraint>
	<web-resource-collection>
		<web-resource-name>Entire Application</web-resource-name>
		<url-pattern>/*</url-pattern>
	</web-resource-collection>
	<user-data-constraint>
		<transport-guarantee>CONFIDENTIAL</transport-guarantee>
	</user-data-constraint>
</security-constraint>
---------- SNIP ---------- SNIP ---------- SNIP ---------- SNIP ----------

******************************
** Finally starting Tomcat! **
******************************

# initctl start tomcat
